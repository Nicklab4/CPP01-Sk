//Задание 2. Immolate Improved!
//Что нужно сделать
//Мы придумываем фэнтезийную онлайн-игру в жанре RPG. В орка стреляют огненными шарами
//разной степени мощности, но у него есть очки здоровья и показатель сопротивляемости
//магии. Очки здоровья, сопротивляемость магии и мощность огненного шара — это
//вещественные числа от нуля до единицы включительно. Чем больше мощность, тем больше
//урон здоровью, но чем больше сопротивляемость магии, тем урон меньше. Например, если
//сопротивляемость равна нулю (0%), то будет нанесён урон, равный мощности огненного
//шара. Если сопротивляемость равна единице (100%), урон будет равен нулю, даже если
//мощность заклинания максимальна.
//
//Напишите программу, в которой пользователь сначала задаёт количество здоровья и
//сопротивляемость магии орка, а после стреляет в него огненными шарами разной
//мощности, пока орк не погибнет. Мощность удара вводится с клавиатуры с каждым
//выстрелом. После каждого заклинания программа выводит на экран итоговый урон от
//удара и оставшиеся очки здоровья орка. Показатель сопротивляемости магии не
//изменяется при попадании. Обеспечьте контроль ввода.
//
//Обратите внимание, что сопротивляемость обозначает только долю от повреждения,
//которая приходится на орка. Пример:
//
//Урон 0.1, сопротивляемость 0.5, по орку будет нанесено 0.05 урона.
//Урон 0.2, сопротивляемость 0.5, по орку будет нанесено 0.1 урона.
//Урон 1, сопротивляемость 0.2, по орку будет нанесено 0.8 урона.
//
//Рекомендации по выполнению
//Для решения использовать цикл while.
//
//Что оценивается
//Все величины должны измеряться в одной шкале — от 0 до 1.
//
//Мощность удара считается с учётом сопротивляемости.

#include <tchar.h>
#include <iostream>
#include <cmath>

int main() {
	std::system("chcp 1251");
	float health, resistance, power;

	std::cout << "Ввод:\n";
	std::cout << "Введите количество здоровья орка: ";

	while(true){
		std::cin >> health;

		if(health < 0 || health > 1 )
			std::cout << "Значение должно быть в промежутке от 0 до 1\n";
		else
			break;
	}

	std::cout << "Введите сопротивляемость магии орка: ";
	while(true){
		std::cin >> resistance;

		if(resistance < 0 || resistance > 1 )
			std::cout << "Значение должно быть в промежутке от 0 до 1\n";
		else
			break;
	}

	std::cout << "\nБитва:\n";

	while(health > 0){
		std::cout << "Введите мощность огненного шара: ";

		while(true){
			std::cin >> power;

			if(power < 0 || power > 1 )
				std::cout << "Значение должно быть в промежутке от 0 до 1\n";
			else
				break;
		}

		std::cout << "Урон " << power << ", сопротивляемость " << resistance
			<< ", по орку будет нанесено " << power - power * resistance << " урона.\n";

		health -= power - power * resistance;

		if(health <= 0){
			std::cout << "Орк умер! \n";
			break;
		}
		else
			std::cout << "Оставшиеся очки здоровья орка: " << health << "\n";
	}

	std::cout << "\nБитва окончена.\n";

}