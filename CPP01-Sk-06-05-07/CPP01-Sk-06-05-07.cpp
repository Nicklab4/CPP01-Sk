//Задание 7. Сокращение дроби* (дополнительное задание)
//Что нужно сделать
//Пользователь вводит числа M и N. Напишите программу, которая преобразует дробь
//M/N к несократимому виду и выдаёт получившийся результат. Обеспечьте контроль ввода.
//
//Пример выполнения
//
//            Введите числитель: 4 
//            Введите знаменатель: 6 
//            Результат: 2 / 3 
//            Введите числитель: 25 
//            Введите знаменатель: 40
//            Результат: 5 / 8 
//            Введите числитель: −6 
//            Введите знаменатель: 12 
//            Результат: −1 / 2 
//(При вводе отрицательных чисел в выводе должен быть только один ведущий минус.
//Неправильный вывод программы: 1/−2, −1/−2.) 
//            Введите числитель: 896 
//            Введите знаменатель: 3584 
//            Результат: 1 / 4
//
//Рекомендации по выполнению
//Не забывайте о правилах деления чисел. Программа должна работать корректно и не должна «падать».
//
//Что оценивается
//Алгоритм оптимальный, не бесконечный и не очень большой. Программа не зависает.
//Правильно определены критерии начала и конца цикла.

#include <tchar.h>
#include <iostream>

int main() {
	std::system("chcp 1251");

	int num, numMod, denum, count, divisor;
	count = 2;
	divisor = 1;

	std::cout << "Введите числитель: ";
	std::cin >> num;

	std::cout << "Введите знаменатель: ";
	std::cin >> denum;

	// если знаменатель меньше или равен нулю - неправильные значения дроби
	if(denum > 0){

		// если числитель меньше нуля - берём его значение по модулю
		if(num < 0)
			numMod = 0 - num;
		else
			numMod = num;


		while(count <= numMod){
			if((numMod % count == 0) && (denum % count == 0))
				divisor = count;
			++count;
		}

		std::cout << "Результат: " << num / divisor << " / " << denum / divisor << "\n";
	}
	else
		std::cout << "Неправильные значения дроби: " << num << " / " << denum << "\n";

}