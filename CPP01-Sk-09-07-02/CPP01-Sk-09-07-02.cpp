//2. Длинное вещественное число
//Вы решили разработать программу-калькулятор, которая складывает числа сколько угодно
//большой длины. Для этого вы планируете работать с ними как со строками. Первая
//проблема, с которой вы столкнулись, — по данной строке нужно понять, является она
//корректной записью вещественного числа или нет.
//
//Корректной считается запись, удовлетворяющая следующим условиям:
// - Первым символом должна быть либо цифра, либо точка, либо знак минус. 
// - После этого может идти ещё несколько цифр (возможно, ни одной). 
// - Затем может идти точка, отделяющая целую часть от дробной. До точки может и не
//быть цифр. В таком случае считается, что до точки стоит 0. 
// - После точки идёт ещё несколько цифр (возможно, ни одной). Хотя бы одна цифра в
//записи числа должна присутствовать. (Чтобы не усложнять задачу, в этом задании мы не
//будем рассматривать числа в экспоненциальной записи, такие как 1.2e-3.)
//
//Напишите программу, которая получает от пользователя строку и выводит ответ Yes,
//если эта строка корректно задаёт вещественное число, в противном случае выводит No.
//
//Пример выполнения
//Корректные записи:
//0123
//00.000
//.15
//165.
//999999999999999999999999999999999.999999999999999999999
//−1.0
//−.35
//
//Некорректные записи:
//1.2.3 (десятичная точка может быть только одна)
//−. (должна быть хотя бы одна цифра в записи)
//11e-3 (мы не разрешаем использовать символ e в записи)
//+25 (мы не разрешаем использовать символ + в записи)
//
//Что оценивается
//Использован строковый тип данных для считывания чисел.
//Решение на примерах из условия выдаёт правильный результат.

#include <tchar.h>
#include <iostream>
#include <string>

int main(){
	std::system("chcp 1251");

	std::string str;
	bool num = false;
	bool dot = false;
	bool parse = true;

	std::cout << "Введите представление числа: ";
	std::cin >> str;

	for(int i = 0; i < str.length(); i++){
		if(str[i] >= '0' && str[i] <= '9'){
			num = true;
			continue;
		}
		else if(str[i] == '.' && !dot)
			dot = true;

		else if(str[i] == '.' && dot ){
			parse = false;
			break;
		}
		else if(str[i] == '-' && i == 0)
			continue;

		else if(str[i] == '-' && i != 0){
			parse = false;
			break;
		}
		else if(str[i] < '0' || str[i] > '9') {
			parse = false;
			break;
		}
	}

	std::cout << "Является строка корректным числом? \n";

	if(parse && num)
		std::cout << "Yes. \n";
	else
		std::cout << "No. \n";
}